---
- name: Set up Flask Application on EC2
  hosts: webserver
  become: yes
  vars:
    flask_app_repo: 'https://github.com/mikhail-w/-todolist-flask.git'
    app_dir: '/opt/todolist-flask'
    mysql_user: 'chandra'
    mysql_password: 'Chandra@123'
    mysql_database: 'todo_db'

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - python3
          - python3-pip
          - python3-venv
          - mysql-server
          - python3-mysqldb
          - git
          - nginx
        state: present

    - name: Start and enable MySQL
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Create MySQL database
      mysql_db:
        name: '{{ mysql_database }}'
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Create MySQL user
      mysql_user:
        name: '{{ mysql_user }}'
        password: '{{ mysql_password }}'
        priv: '{{ mysql_database }}.*:ALL'
        host: localhost
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Clone Flask application
      git:
        repo: '{{ flask_app_repo }}'
        dest: '{{ app_dir }}'
        force: yes

    - name: Create Python virtual environment
      command:
        cmd: python3 -m venv venv
        chdir: '{{ app_dir }}'
        creates: '{{ app_dir }}/venv'

    - name: Install Python requirements
      pip:
        requirements: '{{ app_dir }}/requirements.txt'
        virtualenv: '{{ app_dir }}/venv'

    - name: Install python-dotenv
      pip:
        name: python-dotenv
        virtualenv: '{{ app_dir }}/venv'

    - name: Update Flask application configuration
      lineinfile:
        path: '{{ app_dir }}/todo.py'
        regexp: '^(\s+)app.run\(.*\)'
        line: '    app.run(host="0.0.0.0", port=5000)'
        backrefs: yes

    - name: Create systemd service file
      copy:
        dest: /etc/systemd/system/todoapp.service
        content: |
          [Unit]
          Description=Flask Todo Application
          After=network.target

          [Service]
          User=ubuntu
          WorkingDirectory={{ app_dir }}
          Environment=PATH={{ app_dir }}/venv/bin
          ExecStart={{ app_dir }}/venv/bin/python3 {{ app_dir }}/todo.py
          Restart=always

          [Install]
          WantedBy=multi-user.target

    - name: Enable and start todo application
      systemd:
        name: todoapp
        state: restarted
        enabled: yes
        daemon_reload: yes

    - name: Allow port 5000 in UFW
      ufw:
        rule: allow
        port: '5000'
        proto: tcp
